<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.all.powerful.bot.mapper.PayoutRecordMapper">

    <resultMap type="PayoutRecord" id="PayoutRecordResult">
        <result property="id"    column="id"    />
        <result property="orderId"    column="order_id"    />
        <result property="userId"    column="user_id"    />
        <result property="username"    column="username"    />
        <result property="nickname"    column="nickname"    />
        <result property="amount"    column="amount"    />
        <result property="actualAmount"    column="actual_amount"    />
        <result property="status"    column="status"    />
        <result property="isRed"    column="is_red"    />
        <result property="payAmount"    column="pay_amount"    />
        <result property="pStatus"    column="p_status"    />
        <result property="address"    column="address"    />
        <result property="hash"    column="hash"    />
        <result property="remark"    column="remark"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectPayoutRecordVo">
        select id, order_id, user_id, username, nickname, amount, actual_amount,status, pay_amount, p_status, address, hash, remark, create_by, create_time, update_by, update_time from payout_record
    </sql>

    <select id="selectPayoutRecordList" parameterType="PayoutRecord" resultMap="PayoutRecordResult">
        select t1.*, t2.is_red from payout_record t1
        left join tg_user t2 on t1.user_id = t2.user_id
        where t1.status = '0'
        <if test="orderId != null  and orderId != ''"> and t1.order_id = #{orderId}</if>
        <if test="userId != null  and userId != ''"> and t1.user_id = #{userId}</if>
        <if test="username != null  and username != ''"> and t1.username like concat('%', #{username}, '%')</if>
        <if test="status != null  and status != ''"> and t1.status = #{status}</if>
        <if test="pStatus != null  and pStatus != ''"> and t1.p_status = #{pStatus}</if>
        <if test="params.beginCreateTime != null and params.beginCreateTime != '' and params.endCreateTime != null and params.endCreateTime != ''"> and create_time between #{params.beginCreateTime} and #{params.endCreateTime}</if>
        order by t1.create_time desc
    </select>

    <select id="selectPayoutRecordListForUser" parameterType="PayoutRecord" resultMap="PayoutRecordResult">
        <include refid="selectPayoutRecordVo"/>
        where status = '0'
        <if test="orderId != null  and orderId != ''"> and order_id = #{orderId}</if>
        <if test="userId != null  and userId != ''"> and user_id = #{userId}</if>
        <if test="username != null  and username != ''"> and username like concat('%', #{username}, '%')</if>
        order by create_time desc
    </select>

    <select id="selectPayoutRecordById" parameterType="Long" resultMap="PayoutRecordResult">
        <include refid="selectPayoutRecordVo"/>
        where id = #{id}
    </select>

    <select id="checkLimit" parameterType="map" resultType="Integer">
        select count(1) from payout_record
        where address = #{address,jdbcType=VARCHAR}
          and p_status = '0' and create_time >=  #{resultDate}
    </select>

    <insert id="insertPayoutRecord" parameterType="PayoutRecord" useGeneratedKeys="true" keyProperty="id">
        insert into payout_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="orderId != null and orderId != ''">order_id,</if>
            <if test="userId != null and userId != ''">user_id,</if>
            <if test="username != null and username != ''">username,</if>
            <if test="nickname != null">nickname,</if>
            <if test="amount != null">amount,</if>
            <if test="actualAmount != null">actual_amount,</if>
            <if test="status != null">status,</if>
            <if test="payAmount != null">pay_amount,</if>
            <if test="pStatus != null">p_status,</if>
            <if test="address != null">address,</if>
            <if test="hash != null">hash,</if>
            <if test="remark != null">remark,</if>
            <if test="createBy != null and createBy != ''">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="orderId != null and orderId != ''">#{orderId},</if>
            <if test="userId != null and userId != ''">#{userId},</if>
            <if test="username != null and username != ''">#{username},</if>
            <if test="nickname != null">#{nickname},</if>
            <if test="amount != null">#{amount},</if>
            <if test="actualAmount != null">#{actualAmount},</if>
            <if test="status != null">#{status},</if>
            <if test="payAmount != null">#{payAmount},</if>
            <if test="pStatus != null">#{pStatus},</if>
            <if test="address != null">#{address},</if>
            <if test="hash != null">#{hash},</if>
            <if test="remark != null">#{remark},</if>
            <if test="createBy != null and createBy != ''">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updatePayoutRecord" parameterType="PayoutRecord">
        update payout_record
        <trim prefix="SET" suffixOverrides=",">
            <if test="orderId != null and orderId != ''">order_id = #{orderId},</if>
            <if test="userId != null and userId != ''">user_id = #{userId},</if>
            <if test="username != null and username != ''">username = #{username},</if>
            <if test="nickname != null">nickname = #{nickname},</if>
            <if test="amount != null">amount = #{amount},</if>
            <if test="actualAmount != null">actual_amount = #{actualAmount},</if>
            <if test="status != null">status = #{status},</if>
            <if test="payAmount != null">pay_amount = #{payAmount},</if>
            <if test="pStatus != null">p_status = #{pStatus},</if>
            <if test="address != null">address = #{address},</if>
            <if test="hash != null">hash = #{hash},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="createBy != null and createBy != ''">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <update id="updatePayoutRecordByOrderId" parameterType="PayoutRecord">
        update payout_record
        <trim prefix="SET" suffixOverrides=",">
            <if test="status != null">status = #{status},</if>
            <if test="pStatus != null">p_status = #{pStatus},</if>
            <if test="hash != null">hash = #{hash},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where order_id = #{orderId}
    </update>

    <delete id="deletePayoutRecordById" parameterType="Long">
        delete from payout_record where id = #{id}
    </delete>

    <delete id="deletePayoutRecordByIds" parameterType="String">
        delete from payout_record where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>
